==16223== Memcheck, a memory error detector
==16223== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==16223== Using Valgrind-3.14.0.GIT and LibVEX; rerun with -h for copyright info
==16223== Command: ./yshell
==16223== 
yshell: Bad: no such function
==16223== 
==16223== HEAP SUMMARY:
==16223==     in use at exit: 1,320 bytes in 35 blocks
==16223==   total heap usage: 260 allocs, 225 frees, 8,798 bytes allocated
==16223== 
==16223== 1,320 (40 direct, 1,280 indirect) bytes in 1 blocks are definitely lost in loss record 13 of 13
==16223==    at 0x4C2A453: operator new(unsigned long) (vg_replace_malloc.c:334)
==16223==    by 0x4149CF: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)
==16223==    by 0x41433E: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)
==16223==    by 0x413783: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:97)
==16223==    by 0x412C69: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<inode, std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, inode*, std::allocator<inode> const&, file_type&&) (shared_ptr_base.h:654)
==16223==    by 0x411EA1: std::__shared_ptr<inode, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, std::allocator<inode> const&, file_type&&) (shared_ptr_base.h:1322)
==16223==    by 0x410CAE: std::shared_ptr<inode>::shared_ptr<std::allocator<inode>, file_type>(std::_Sp_make_shared_tag, std::allocator<inode> const&, file_type&&) (shared_ptr.h:360)
==16223==    by 0x40FD7E: std::shared_ptr<inode> std::allocate_shared<inode, std::allocator<inode>, file_type>(std::allocator<inode> const&, file_type&&) (shared_ptr.h:707)
==16223==    by 0x40F3E2: std::shared_ptr<inode> std::make_shared<inode, file_type>(file_type&&) (shared_ptr.h:723)
==16223==    by 0x40CCAA: inode_state::inode_state() (file_sys.cpp:34)
==16223==    by 0x416A51: main (main.cpp:50)
==16223== 
==16223== LEAK SUMMARY:
==16223==    definitely lost: 40 bytes in 1 blocks
==16223==    indirectly lost: 1,280 bytes in 34 blocks
==16223==      possibly lost: 0 bytes in 0 blocks
==16223==    still reachable: 0 bytes in 0 blocks
==16223==         suppressed: 0 bytes in 0 blocks
==16223== 
==16223== For counts of detected and suppressed errors, rerun with: -v
==16223== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
